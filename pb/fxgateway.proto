syntax = "proto3";

package pb;

import "google/api/annotations.proto";

service FxGateway {
  rpc Invoke(InvokeServiceRequest) returns(Message) {
  }

  rpc List(Empty) returns(Functions) {
    option (google.api.http) = {
      get: "/system/functions"
    };
  }
  rpc Deploy(CreateFunctionRequest) returns(Message) {
    option (google.api.http) = {
      post: "/system/functions"
      body: "*"
    };
  }
  rpc Delete(DeleteFunctionRequest) returns(Message) {
    option (google.api.http) = {
      delete: "/system/function/{FunctionName}"
    };
  }
  rpc Update(CreateFunctionRequest) returns(Message) {
    option (google.api.http) = {
      put: "/system/functions"
      body: "*"
    };
  }
  rpc GetMeta(FunctionRequest) returns(Function) {
    option (google.api.http) = {
      get: "/system/function/{FunctionName}"
    };
  }
  rpc GetLog(FunctionRequest) returns(Message) {
    option (google.api.http) = {
      get: "/system/function-log/{FunctionName}"
    };
  }
  rpc ReplicaUpdate(ScaleServiceRequest) returns(Message) {
    option (google.api.http) = {
      put: "/system/scale-function"
      body: "*"
    };
  }
  rpc Info(Empty) returns(Message) {
    option (google.api.http) = {
      get: "/system/info"
    };
  }
  rpc HealthCheck(Empty) returns(Message) {
    option (google.api.http) = {
      get: "/healthz"
    };
  }
}

message Empty {}

message Message {
  string Msg = 1;
}

message Messages{
  bytes Output = 1; 
}

message CreateFunctionRequest {
  string Service = 1;
  string Image = 2;
  map<string, string> EnvVars = 3;
  map<string, string> Labels = 4;
  map<string, string> Annotations = 5;
  repeated string Constraints = 6;
  repeated string Secrets = 7;
  string RegistryAuth = 8;
  FunctionResources Limits = 9;
  FunctionResources Requests = 10;
  int32 MinReplicas = 11;
  int32 MaxReplicas = 12;
  string NodeName = 13;
}

message DeleteFunctionRequest {
  string FunctionName = 1;
}

message ScaleServiceRequest {
  string ServiceName = 1;
  uint64 Replicas = 2;
}

message InvokeServiceRequest {
  string Service = 1;
  bytes Input = 2;
}

message FunctionRequest {
  string FunctionName = 1;
}

message Functions {
  repeated Function Functions = 1;
}

message Function {
  string Name = 1;
  string Image = 2;
  uint64 InvocationCount = 3;
  uint64 Replicas = 4;
  uint64 AvailableReplicas = 5;
  map<string, string> Annotations= 6;
  map<string, string> Labels = 7;
}

message FunctionResources {
  string Memory = 1;
  string CPU = 2;
  string GPU = 3;
}
